package service.messagePush;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import model.messagePush.AccessToken;
import model.messagePush.MessageUserInfo;
import model.messagePush.MessageUseropen;
import model.messagePush.ResultTemplateDate;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;

import com.alibaba.fastjson.JSONObject;
import project.util.wx.config.PublicAddress;

/**
 * @author ls
 * @version 创建时间：2019年1月23日 下午8:37:36
 * @ClassName 类名称
 * @Description 类描述
 */
@Service
public class MessagePushService {

	/**
	 * 获取UserInfo
	 * 
	 */
	public MessageUserInfo getUserInfoByOpenId(String AccessToken, String OpendId) {
		String tmpUrl = "https://api.weixin.qq.com/cgi-bin/user/info?access_token=" + AccessToken + "&openid="
				+ OpendId;
		CloseableHttpClient httpCilent = HttpClients.createDefault();
		HttpGet httpGet = new HttpGet(tmpUrl);
		try {
			HttpResponse httpResponse = httpCilent.execute(httpGet);
			if (httpResponse.getStatusLine().getStatusCode() == 200) {
				String entity = EntityUtils.toString(httpResponse.getEntity());
				MessageUserInfo userinfo = JSONObject.parseObject(entity, MessageUserInfo.class);
				if (userinfo != null) {
					return userinfo;
				}
				return null;
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				// 释放资源
				httpCilent.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return null;

	}

	/**
	 * 获取公众号所有关注者的openid
	 * 
	 */
	public List<String> getOpenIds(String AccessToken) {
		String tmpUrl = "https://api.weixin.qq.com/cgi-bin/user/get?access_token=" + AccessToken;
		CloseableHttpClient httpCilent = HttpClients.createDefault();
		HttpGet httpGet = new HttpGet(tmpUrl);
		try {
			HttpResponse httpResponse = httpCilent.execute(httpGet);
			if (httpResponse.getStatusLine().getStatusCode() == 200) {
				String entity = EntityUtils.toString(httpResponse.getEntity());
				MessageUseropen useropen = JSONObject.parseObject(entity, MessageUseropen.class);

				List<String> list = useropen.getData().get("openid");
				if (list != null && list.size() > 0) {
					return list;
				}

				return null;
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				// 释放资源
				httpCilent.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return null;
	}

	/**
	 * 根据微信id，secret获取access_token
	 * 
	 */
	public String getAccessToken() {
		//https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=APPID&secret=APPSECRET
		String tmpUrl = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid="
				+ PublicAddress.appId_jlkj + "&secret=" + PublicAddress.appSecret_jlkj;
		CloseableHttpClient httpCilent = HttpClients.createDefault();
		HttpGet httpGet = new HttpGet(tmpUrl);
		try {
			HttpResponse httpResponse = httpCilent.execute(httpGet);
			if (httpResponse.getStatusLine().getStatusCode() == 200) {
				String entity = EntityUtils.toString(httpResponse.getEntity());
				AccessToken accessToken = JSONObject.parseObject(entity, AccessToken.class);
				return accessToken.getAccess_token();
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				// 释放资源
				httpCilent.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return "";
	}

	
	/**
	 * 根据微信用戶小程序id，secret获取access_token
	 * 
	 */
	public String getAccessToken_jlxcx() {
		//https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=APPID&secret=APPSECRET
		String tmpUrl = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid="
				+ PublicAddress.appId_jlxcx + "&secret=" + PublicAddress.appSecret_jlxcx;
		CloseableHttpClient httpCilent = HttpClients.createDefault();
		HttpGet httpGet = new HttpGet(tmpUrl);
		try {
			HttpResponse httpResponse = httpCilent.execute(httpGet);
			if (httpResponse.getStatusLine().getStatusCode() == 200) {
				String entity = EntityUtils.toString(httpResponse.getEntity());
				AccessToken accessToken = JSONObject.parseObject(entity, AccessToken.class);
				return accessToken.getAccess_token();
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				// 释放资源
				httpCilent.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return "";
	}
	
	/**
	 * 发送微信消息模板
	 * 
	 */
	public String sendTemplate(String touser, String templateId, Map<String, String> map, String id) {
		String tepUrl = "https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=" + getAccessToken();
		CloseableHttpClient httpClient = HttpClients.createDefault();
		HttpPost httpPost = new HttpPost(tepUrl);
		// 装配post请求参数
		JSONObject json = new JSONObject();
		json.put("touser", touser);// 用户openid
		json.put("template_id", templateId);// 模板id
		//json.put("appid", PublicAddress.appId_jlsh);// 关联小程序appid
		//json.put("url", PublicAddress.url);// 跳转地址
		JSONObject data = new JSONObject();
		data.put("appid", PublicAddress.appId_jlsh);
		data.put("pagepath", PublicAddress.url+id);
		json.put("miniprogram", data);
		
		
		JSONObject dataJson = new JSONObject();

		data = new JSONObject();

		// 标题
		data.put("value", map.get("first"));
		data.put("color", "#157efb");
		dataJson.put("first", data);

		// 订单编号
		data = new JSONObject();
		data.put("value", map.get("keyword1"));
		data.put("color", "#333");
		dataJson.put("keyword1", data);

		// 价格
		data = new JSONObject();
		data.put("value", map.get("keyword2"));
		data.put("color", "#333");
		dataJson.put("keyword2", data);

		// 买家
		data = new JSONObject();
		data.put("value", map.get("keyword3"));
		data.put("color", "#333");
		dataJson.put("keyword3", data);
		// 订单状态
		data = new JSONObject();
		data.put("value", map.get("keyword4"));
		data.put("color", "#333");
		dataJson.put("keyword4", data);

		// 提示信息
		data = new JSONObject();
		data.put("value", map.get("remark"));
		data.put("color", "#157efb");
		dataJson.put("remark", data);

		json.put("data", dataJson);
		String resultStr = "发送失败";
		try {
			StringEntity myEntity = new StringEntity(json.toJSONString(), ContentType.APPLICATION_JSON);
			// 设置post求情参数
			httpPost.setEntity(myEntity);
			HttpResponse httpResponse = httpClient.execute(httpPost);
			if (httpResponse.getStatusLine().getStatusCode() == 200) {
				// 发送成功
				String resutlEntity = EntityUtils.toString(httpResponse.getEntity());
				ResultTemplateDate resultTemplateDate = JSONObject.parseObject(resutlEntity, ResultTemplateDate.class);
				System.out.println(
						"返回信息：" + resultTemplateDate.getErrmsg() + "---返回状态码：" + resultTemplateDate.getErrcode());
				if (resultTemplateDate.getErrcode().equals("40037")) {
					resultStr = "template_id不正确";
				}
				if (resultTemplateDate.getErrcode().equals("41028")) {
					resultStr = "form_id不正确，或者过期";
				}
				if (resultTemplateDate.getErrcode().equals("41029")) {
					resultStr = "form_id已被使用";
				}
				if (resultTemplateDate.getErrcode().equals("41030")) {
					resultStr = "page不正确";
				}
				if (resultTemplateDate.getErrcode().equals("45009")) {
					resultStr = "接口调用超过限额（目前默认每个帐号日调用限额为100万）";

				}
				if (resultTemplateDate.getErrcode().equals("0") && resultTemplateDate.getErrmsg().equals("ok")) {
					resultStr = "ok";
				}

				return resultStr;
			} else {
				// 发送失败
				return resultStr;
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (httpClient != null) {
					// 释放资源
					httpClient.close();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return resultStr;
	}

}
