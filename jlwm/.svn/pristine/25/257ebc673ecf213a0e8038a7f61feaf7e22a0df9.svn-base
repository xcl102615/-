package service.user.impl;

import dao.user.UserMapper;
import model.user.User;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import project.dao.BaseDao;
import project.model.AjaxResult;
import project.service.BaseService;
import project.util.MD5;
import project.util.ShiroUtil;
import service.user.UserService;

import java.util.Map;


@Service
public class UserServiceImpl extends BaseService implements UserService {

    private Logger log = LoggerFactory.getLogger(UserServiceImpl.class);

    @Autowired
    private UserMapper dao;

    @Override
    protected BaseDao getDao() {
        return dao;
    }

    public AjaxResult updatePwd(Map map){
        User user = ShiroUtil.getCurrentUser(new User());
        if (user == null) {
            return AjaxResult.build("0", "用户未登录");
        }
        user=(User)dao.selectOneById(user.getId());//从数据库中获取用户信息

        String passWord=MD5.GetPwd(map.get("password").toString());

        log.info("前端传来的原密码："+passWord+"- - - - - 数据库中的原密码："+user.getPassword());
        if(!user.getPassword().equals(passWord)){ //判断原密码是否相等
            return AjaxResult.build("0", "原密码错误");
        }
        user.setPassword(MD5.GetPwd(map.get("newPassword").toString()));//设置新密码并加密
        int i=dao.updatePwd(user);
        if(i<=0){
            return AjaxResult.build("0", "修改失败");
        }
        return AjaxResult.build("1", "修改成功");

    }
}
