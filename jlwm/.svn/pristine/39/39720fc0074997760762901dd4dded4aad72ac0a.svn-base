<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.deliveryOrder.DeliveryMoneyMapper">

    <resultMap id="BaseResultMap" type="model.deliveryOrder.DeliveryMoney">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="createDate" property="createDate"/>
        <result column="status" property="status"/>
        <result column="description" property="description"/>

    </resultMap>

    <!--扩展 resultMap-->
    <resultMap id="resultMap" type="model.deliveryOrder.DeliveryMoney" extends="BaseResultMap">
        <result column="type" property="type"/>
        <result column="money" property="money"/>
        <!--1对1-->
        <association property="user" javaType="model.user.User">
            <id column="user" property="id"/>
        </association>
        <association property="order" javaType="model.order.Order">
            <id column="order" property="id"/>
            <result column="deliveryPrice" property="deliveryPrice"/>
        </association>
        <!--1对多-->
        <!--<collection property="roles" column="id"-->
        <!--javaType="ArrayList" ofType="java.lang.Object"-->
        <!--select="dao.impl.RoleMapper.selectRoles">-->
        <!--</collection>-->
    </resultMap>
    <sql id="Base_Column_List">
--         id,name,createDate,status,description,password
      *
    </sql>
    <sql id="columns">
        <trim suffix="" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="money != null">
                money,
            </if>
          
            <if test="user != null">
                `user`,
            </if>
            <if test="order != null">
                `order`,
            </if>

        </trim>
    </sql>
    <sql id="columnsValue">
        <trim suffix="" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="createDate != null">
                #{createDate},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="money != null">
                #{money},
            </if>
            <if test="user != null">
                #{user.id},
            </if>
            <if test="order != null">
                #{order.id},
            </if>
        </trim>
    </sql>
    <!--涉及条件的统一配置，特殊需求在方法上改动-->
    <sql id="condition">
        <where>
            <trim prefix="(" suffix=")" suffixOverrides="and">
                <if test="id!=null">
                    id = #{id} and
                </if>
                <!--
                    根据name模糊查询
                -->
                <if test="user">
                    user=#{user.id} and
                </if>
                <if test="type">
                    type=#{type} and
                </if>
                <if test="status">
                    status=#{status} and
                </if>
            </trim>
        </where>
    </sql>
    <!--更新操作 统一配置-->
    <sql id="forUpdate">
        set
        <trim suffix="" suffixOverrides=",">
            <if test="name!=null">
                `name`=#{name},
            </if>
            <if test="status!=null">
                `status`=#{status},
            </if>
            <if test="description!=null">
                `description`=#{description},
            </if>
            <if test="type!=null">
                `type`=#{type},
            </if>
            <if test="money!=null">
                `money`=#{money},
            </if>
        </trim>
    </sql>
    <!--组件需要以下方法-->
    <insert id="save" parameterType="model.deliveryOrder.DeliveryMoney">
        insert into t_deliveryMoney (<include refid="columns"/>) values (<include refid="columnsValue"/>);

    </insert>

    <delete id="delete" parameterType="model.deliveryOrder.DeliveryMoney">
        delete from t_deliveryMoney where id=#{id} and `user`=#{user.id};
    </delete>
    <delete id="batchDelete" parameterType="java.util.List">
        delete from t_deliveryMoney
        <where>
            id in
            <foreach collection="list" item="item" separator="," open="(" close=")">#{item,jdbcType=VARCHAR}</foreach>
            and `user`=#{user.id};
        </where>
    </delete>

    <update id="update" parameterType="model.deliveryOrder.DeliveryMoney">
        UPDATE t_deliveryMoney
        <include refid="forUpdate"/>
        WHERE (`id`=#{id});
    </update>

    <select id="select" parameterType="java.util.Map" resultMap="resultMap">
        select * from t_deliveryMoney<include refid="condition"/>;
    </select>
    <select id="selectOne" parameterType="model.deliveryOrder.DeliveryMoney" resultMap="resultMap">
        select * from t_deliveryMoney<include refid="condition"/>;
    </select>
    <select id="fastFind" parameterType="java.util.Map" resultType="java.util.Map">
        select id,name from t_deliveryMoney<include refid="condition"/>;
    </select>
    <select id="selectOneById" parameterType="java.lang.String" resultMap="resultMap">
        select * from t_deliveryMoney where id=#{id};
    </select>
    <select id="selectAll" resultMap="resultMap">
        select * from t_deliveryMoney ;
    </select>
    <select id="findByPage" parameterType="java.util.Map" resultType="java.util.Map">
        select * from t_deliveryMoney
        <include refid="condition"/>
        limit #{start},#{end};
    </select>
    <select id="countTotal" parameterType="java.util.Map" resultType="java.lang.Integer">
        select Count(id) from t_deliveryMoney<include refid="condition"/>;
    </select>
    <select id="selectTopX" parameterType="java.util.Map" resultMap="resultMap">
        select * from t_deliveryMoney
        <include refid="condition"/>
        order by (#{orderBy}) desc limit 0,#{topX};
    </select>
    <select id="randomSelectTopX" parameterType="java.util.Map" resultMap="resultMap">
        SELECT * FROM (
        SELECT * ,ROUND(RAND()) AS newno FROM t_deliveryMoney GROUP BY id
        )AS t
        <include refid="condition"/>
        ORDER BY t.newno asc LIMIT #{topX}
    </select>
    <!--功能扩展-->

  <!--  Double findBalance(DeliveryMoney deliveryMoney);//获取用户金额-->
    <select id="selectMoney" parameterType="java.lang.String" resultType="java.lang.Double">
        select money from t_delivery_money where user=#{user}
    </select>
    <update id="updateMoney" parameterType="java.util.Map">
        update t_delivery_money set money=#{money} where user=#{user.id}
    </update>
    <insert id="insertMoney" parameterType="java.util.Map">
        insert into t_delivery_money values (#{user.id},#{money})
    </insert>
</mapper>
