package controller.wxController;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import model.messagePush.MessageUserInfo;
import model.order.Order;
import model.order.OrderDetails;
import model.shop.Shop;
import model.user.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import project.model.AjaxResult;
import project.util.StringUtils;
import project.util.wx.config.Template;
import service.shop.impl.ShopServiceImpl;
import service.user.impl.UserServiceImpl;
import service.wxService.MessagePushService;
import service.order.impl.OrderServiceImpl;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * @author ls
 * @version 创建时间：2019年1月23日 下午8:37:36
 * @ClassName 类名称
 * @Description 类描述
 */

@RequestMapping("/MessagePushController")
@Controller
public class MessagePushController {

    @Autowired
    private MessagePushService bllMessagePush;

    @Autowired
    private OrderServiceImpl orderService;
    @Autowired
    private ShopServiceImpl shopService;
    @Autowired
    private UserServiceImpl userService;

    /**
     * 获取UserInfo
     */

    @RequestMapping(value = "/getUserInfoByOpenId")
    @ResponseBody
    public MessageUserInfo getUserInfoByOpenId(String AccessToken, String OpendId) {
        return bllMessagePush.getUserInfoByOpenId(AccessToken, OpendId);
    }

    /**
     * 获取公众号所有关注者的openid
     */
    @RequestMapping(value = "/getOpenIds")
    @ResponseBody
    public List<String> getOpenIds(String AccessToken) {
        return bllMessagePush.getOpenIds(AccessToken);
    }

    /**
     * 根据微信id，secret获取access_token
     */

    @RequestMapping(value = "/getAccessToken")
    @ResponseBody
    public String getAccessToken() {
        return bllMessagePush.getAccessToken();
    }

    /**
     * 发送微信消息模板
     */
    @RequestMapping(value = "/sendTemplate")
    @ResponseBody
    public AjaxResult sendTemplate(String id) {
        if (id == "") {
            return AjaxResult.build("0", "id不能为空");
        }

        Order order = (Order) orderService.selectOneById(id).getObj();
        Shop shop = (Shop) shopService.selectOneById(order.getShop().getId()).getObj();
        User user=(User) userService.selectOneById(shop.getUser().getId()).getObj();
        String unionid=user.getUnionid();//商家unionid标识
        if(unionid.equals("")){
            return AjaxResult.build("0","商家注册未存unionid");
        }
        MessageUserInfo messageUserInfo=(MessageUserInfo) bllMessagePush.select(unionid);//通过unionid获取关注列表用户信息
        if(messageUserInfo==null){
            return AjaxResult.build("0","该商家未关注计里科技公众号");
        }
        String openId=messageUserInfo.getOpenid();//获取商家的openid唯一标识符
        System.out.println("商家openId:--------------"+openId);
        System.out.println(order);
        String foodName = "";
        for (OrderDetails orderDetails : order.getOrderDetails()) {
            foodName += orderDetails.getFoodName() + "X" + orderDetails.getNum() + ",";
        }
        Map<String, String> hmap = new HashMap<String, String>();
        hmap.put("first", "您有一个新的外卖订单！");
        hmap.put("keyword1", foodName);
        hmap.put("keyword2", StringUtils.dateToString(order.getPaymentTime()));//订单总结
        hmap.put("keyword3", String.valueOf(StringUtils.sub(order.getRealPay(),order.getDeliveryPrice())));//获取用户名称
        hmap.put("keyword4", order.getAddress().getName() + "," + order.getAddress().getPhone());
        hmap.put("keyword5", order.getAddress().getLocation());
        hmap.put("remark", "用户已付款，赶快接单吧");
        //oAr-B5xVQJ7POEi_lgNb9PFEB-i0   oAr-B52hE9c18pQF8qafSon3b3rc
        String str = bllMessagePush.sendTemplate(openId, Template.toBePaid, hmap, id);
        if (str.equals("ok")) {
            return AjaxResult.build("1", "已通知商家");
        }
        return AjaxResult.build("0", "通知商家失败");
    }

    public static void main(String[] args) {
        Double d1=10.01d;
        Double d2=10d;
        System.out.println(d1-d2);

    }
}
