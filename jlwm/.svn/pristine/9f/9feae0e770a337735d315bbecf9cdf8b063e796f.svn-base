package controller.printer;

import com.alibaba.fastjson.JSON;
import model.printer.Printer;
import model.user.User;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import project.model.AjaxResult;
import project.util.JSONAndObject;
import project.util.RedisUtil;
import project.util.ShiroUtil;
import project.util.StringUtils;
import redis.clients.jedis.Jedis;
import service.printer.PrinterService;

import java.util.Map;

@RequestMapping(value = "printer")
@RestController
public class PrinterController {
    private Logger log = LoggerFactory.getLogger(PrinterController.class);
    @Autowired
    private PrinterService service;

    @RequestMapping(value = "save")
    public AjaxResult save(@RequestBody Printer printer){
        return service.save(printer);
    }


    @RequestMapping(value = "selectAll")
    public AjaxResult selectAll(){
        return service.selectAll();
    }

    @RequestMapping(value = "select")
    public AjaxResult select(Map map){
        return service.select(map);
    }

    @RequestMapping(value = "delete")
    public AjaxResult delete(@RequestBody Printer printer){
        return service.delete(printer);
    }
    @RequestMapping(value = "update")
    public AjaxResult update(@RequestBody Printer printer){
        return service.update(printer);
    }

    /**
     * 添加打印机
     * @param printer
     * @return
     */
    @PostMapping(value = "addPrinter")
    public AjaxResult addPrinter(@RequestBody Printer printer){

        if (StringUtils.objIsNull(printer)) {
            return AjaxResult.build("0", "参数错误");
        }
        if(printer.getShopId()==null||printer.getShopId().equals("")){
            return AjaxResult.build("0", "shopId不能为空");
        }
        return service.addPrinter(printer);
    }

    /**
     * 打印
     * @param map 需要orderId和sn
     * @return
     */
    @PostMapping(value = "print")
    public AjaxResult print(@RequestBody Map map){
        if(map==null||map.isEmpty()){
            return AjaxResult.build("0","参数错误");
        }

        return service.print(map);
    }
    @PostMapping(value = "getKey")
    public AjaxResult getKey(){
        String key=StringUtils.getUUID();
        log.info("自动生成的key:"+key);
        Jedis jedis=RedisUtil.getJedis();
        jedis.set(key,"");
        jedis.close();
        return AjaxResult.build("1","成功",key);
    }

    @RequestMapping(value = "getUser")
    public AjaxResult getUser(String key){
        log.info("用户传来的key:"+key);
        User user = ShiroUtil.getCurrentUser(new User());
        if(user==null){
            return AjaxResult.build("0","用户未登录");
        }
        Jedis jedis=RedisUtil.getJedis();
        jedis.set(key,JSON.toJSONString(user));
        jedis.close();
        return AjaxResult.build("1","成功",user);
    }

    @PostMapping(value = "isLogin")
    public AjaxResult isLogin(@RequestBody Map map){
        log.info("web端传来的key:"+map.get("key").toString());
        Jedis jedis=RedisUtil.getJedis();
        User user= (User) JSON.parse(jedis.get(map.get("key").toString()));
        jedis.close();
       if(user==null){
           return AjaxResult.build("0","未登录");
       }
        return AjaxResult.build("1","成功",user);
    }

}
